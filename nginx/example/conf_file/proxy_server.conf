server {
  listen 8080;
  root /data/upl;
  location / {
  }
}


server {
  location / {
    proxy_pass http://localhost:8080;
  }
  location ~ \.(gif|jpg|png)$ {
    root /data/images;
  }
}

说明
第一个server
This will be a simple server that listens on the port 8080 (previously, the listen directive has not been specified since the standard port 80 was used) and maps all requests to the /data/up1 directory on the local file system. Create this directory and put the index.html file into it. Note that the root directive is placed in the server context. Such root directive is used when the location block selected for serving a request does not include own root directive.
监听来自8080端口，并且去/data/upl下边找资源
注意这里为了做测试我建立了/data/upl目录,并且在下边放置了1.html
第二个server
In the first location block, put the proxy_pass directive with the protocol, name and port of the proxied server specified in the parameter (in our case, it is http://localhost:8080):

We will modify the second location block, which currently maps requests with the /images/ prefix to the files under the /data/images directory, to make it match the requests of images with typical file extensions. The modified location block looks like this:

location ~ \.(gif|jpg|png)$ {
    root /data/images;
}

The parameter is a regular expression matching all URIs ending with .gif, .jpg, or .png. A regular expression should be preceded with ~. The corresponding requests will be mapped to the /data/images directory.

对于一个正则表达式，前边应该放置一个　　~　　符号
所以现在以.gif,.jpg,.png结尾的请求都会去/data/images目录下边找资源
对于其他请求则会转发到8080端口去处理也就是被代理的服务器去处理
例如http://localhost/1.html
故意打错看error.log就可以发现，如下：
2015/11/21 21:48:54 [error] 7047#0: *144 open() "/data/upl/2.html" failed (2: No such file or directory), client: 127.0.0.1, server: , request: "GET /2.html HTTP/1.0", host: "localhost:8080"